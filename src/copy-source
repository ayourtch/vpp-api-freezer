#!/bin/sh

rm -rf src_1908

# copy the autogenerated API header files
find ../../../build-root/build-vpp_debug-native/vpp/ -name '*.api.h' -printf '%P\n' | 
	(while read A; do B=$(echo $A | sed -e 's#[/]#_1908/#'); install -D ../../../build-root/build-vpp_debug-native/vpp/$A src_1908/$B; done)

# copy the autogenerated API types files
find ../../../build-root/build-vpp_debug-native/vpp/ -name '*.api_types.h' -printf '%P\n' | 
	(while read A; do B=$(echo $A | sed -e 's#[/]#_1908/#'); install -D ../../../build-root/build-vpp_debug-native/vpp/$A src_1908/$B; done)

# copy the autogenerated API JSON definitions
find ../../../build-root/build-vpp_debug-native/vpp/ -name '*.api.json' -printf '%P\n' | 
	(while read A; do B=$(echo $A | sed -e 's#[/]#_1908/#'); install -D ../../../build-root/build-vpp_debug-native/vpp/$A src_1908/json/$B; done)

mkdir -p src_1908/vlibapi_1908
cp ../../../src/vlibapi/* src_1908/vlibapi_1908
DST="src_1908/vlibapi_1908"
sed -i -e 's/api_main_t/api_1908_main_t/g' $DST/*.[ch]
sed -i -e 's/vlibapi_get_main/vlibapi_1908_get_main/g' $DST/*.[ch]
sed -i -e 's/vlibapi_set_main/vlibapi_1908_set_main/g' $DST/*.[ch]
sed -i -e 's/^vl_/vl_1908_/g' $DST/*.[ch]
sed -i -e 's#vlibapi/#vlibapi_1908/#g' $DST/*.[ch]
sed -i -e 's/vl_msg_api/vl_1908_msg_api/g' $DST/*.[ch]
sed -i -e 's/vl_api_/vl_1908_api_/g' $DST/*.[ch]

mkdir -p src_1908/vpp_1908/api
cp ../../../src/vpp/api/* src_1908/vpp_1908/api/

DST="src_1908/vpp_1908/api"
sed -i -e 's#vlibapi/#vlibapi_1908/#g' $DST/*.[ch]
sed -i -e 's#vlibmemory/#vlibmemory_1908/#g' $DST/*.[ch]
sed -i -e 's#vpp/api/#vpp_1908/api/#g' $DST/*.[ch]
sed -i -e 's#api_main_t#api_1908_main_t#g' $DST/*.[ch]
sed -i -e 's#vl_msg_#vl_1908_msg_#g' $DST/*.[ch]
sed -i -e 's#VL_MSG_#VL_1908_MSG_#g' $DST/*.[ch]
sed -i -e 's#vl_api_#vl_1908_api_#g' $DST/*.[ch]
sed -i -e 's#vnet/vnet_all_api_h#vnet_1908/vnet_all_api_h#g' $DST/*.[ch]

mkdir -p src_1908/vlibmemory_1908
cp ../../../src/vlibmemory/* src_1908/vlibmemory_1908/
DST="src_1908/vlibmemory_1908"

sed -i -e 's#vlibmemory/#vlibmemory_1908/#g' $DST/*.[ch]
sed -i -e 's#vlibapi/#vlibapi_1908/#g' $DST/*.[ch]
sed -i -e 's#api_main_t#api_1908_main_t#g' $DST/*.[ch]
sed -i -e 's#vl_msg_#vl_1908_msg_#g' $DST/*.[ch]
sed -i -e 's#VL_MSG_#VL_1908_MSG_#g' $DST/*.[ch]
sed -i -e 's#vl_api_#vl_1908_api_#g' $DST/*.[ch]

mkdir -p src_1908/vnet_1908
cp ../../../src/vnet/vnet_all_api_h.h src_1908/vnet_1908/
# sed -i -e 's#vnet/#vnet_1908/#g' $(find src_1908/vnet_1908/ -name '*.[ch]')
sed -i -e 's#vnet/#vnet_1908/#g' $(find src_1908/ -name '*.[ch]')


find src_1908/ -name '*.api.h' -exec sed -i -e 's#vl_api_#vl_1908_api_#g' {} \;
find src_1908/ -name '*.api_types.h' -exec sed -i -e 's#vl_api_#vl_1908_api_#g' {} \; -printf "Fix up api_types: %f\n"
find src_1908/ -name '*.[ch]' -exec sed -i \
	-e 's#<lb/#<plugins_1908/lb/#g' \
	-e 's#<acl/#<plugins_1908/acl/#g' \
        -e 's/vlibapi_get_main/vlibapi_1908_get_main/g' \
        -e 's/vlibapi_set_main/vlibapi_1908_set_main/g' \
        -e 's#api_global_main#api_1908_global_main#g' \
        -e 's#vl_msg_#vl_1908_msg_#g' \
        -e 's#VL_MSG_#VL_1908_MSG_#g' \
        -e 's#VL_ILLEGAL#VL_1908_ILLEGAL#g' \
	-e 's#vl_noop_handler#vl_1908_noop_handler#g' \
	-e 's#vl_sock#vl_1908_sock#g' \
	-e 's#socket_main#socket_1908_main#g' \
	-e 's#socksvr#socksvr_1908#g' \
	-e 's#vpe-api#vpe-api-1908#g' \
	-e 's#SVM_GLOBAL_REGION_NAME#"/global_vm-1908"#g' \
	-e 's#global_vm#global_vm-1908#g' \
	-e 's#vpp-api#vpp-api-1908#g' \
	-e 's#vl_mem_api_#vl_1908_mem_api_#g' \
	-e 's#SRC_VLIBMEMORY_#SRC_1908_VLIBMEMORY_#g' \
	-e 's#vl_shmem_hdr#vl_1908_shmem_hdr#g' \
        -e 's#VL_API_#VL_1908_API_#g' \
	-e 's#ifndef included_#ifndef included_1908_#g' \
	-e 's#define included_#define included_1908_#g' \
	-e 's#ifndef __api_helper#ifndef __api_1908_helper#g' \
	-e 's#define __api_helper#define __api_1908_helper#g' \
	-e 's#REGISTRATION_TYPE_#REGISTRATION_TYPE_1908_#g' \
	-e 's#vl_registration#vl_1908_registration#g' \
	-e 's#trace_cfg_t#trace_1908_cfg_t#g' \
	-e 's#msgbuf_#msgbuf_1908_#g' \
	-e 's#api_version_t#api_1908_version_t#g' \
	-e 's#VL_MSG_API_FUNCTION_SYMBOL#VL_1908_MSG_API_FUNCTION_SYMBOL#g' \
	-e 's#VL_MSG_API_REAPER_FUNCTION#VL_1908_MSG_API_REAPER_FUNCTION#g' \
	-e 's#VLIB_DECLARE_REAPER_FUNCTION#VLIB_1908_DECLARE_REAPER_FUNCTION#g' \
        -e 's#api_main#api_1908_main#g' \
	-e 's#ring_alloc#ring_1908_alloc#g' \
	-e 's#foreach_vl_aring_size#foreach_vl_1908_aring_size#g' \
	-e 's#foreach_clnt_aring_size#foreach_clnt_1908_aring_size#g' \
	-e 's#vl_init_shmem#vl_1908_init_shmem_dont_use#g' \
	-e 's#show api#show api 1908#g' \
	-e 's#clear api#clear api 1908#g' \
	-e 's#api trace#api 1908 trace#g' \
	-e 's#api_trace_config_fn#api_1908_trace_config_fn#g' \
	-e 's#api-trace#api-1908-trace#g' \
	-e 's#api_queue_config_fn#api_1908_queue_config_fn#g' \
	-e 's#api-queue#api-1908-queue#g' \
	-e 's#vpe_api_init#vpe_api_1908_init#g' \
	-e 's#vl_map_shmem#vl_1908_map_shmem#g' \
	-e 's#map_api_segment_init#map_api_1908_segment_init#g' \
	-e 's#vlibmemory_init#vlibmemory_1908_init#g' \
	-e 's#vl_set_memory_region_name#vl_1908_set_memory_region_name#g' \
	-e 's#setup_memclnt_exit#setup_memclnt_1908_exit#g' \
	-e 's#NAT_LOG_#NAT_1908_LOG_#g' \
	-e 's#NAT_IS_#NAT_1908_IS_#g' \
	-e 's# GBP_# GBP_1908_#g' \
	-e 's# LB_# LB_1908_#g' \
	-e 's# VPE_# VPE_1908_#g' \
	-e 's# IP_# IP_1908_#g' \
	-e 's# QOS_# QOS_1908_#g' \
	-e 's# FIB_# FIB_1908_#g' \
	-e 's# IPSEC_# IPSEC_1908_#g' \
	-e 's# SYSLOG_# SYSLOG_1908_#g' \
	-e 's# VXLAN_GBP_# VXLAN_GBP_1908_#g' \
	-e 's# GRE_# GRE_1908_#g' \
	-e 's# BRIDGE_# BRIDGE_1908_#g' \
	-e 's# MFIB_# MFIB_1908_#g' \
	-e 's# PUNT_# PUNT_1908_#g' \
	-e 's#ADDRESS_IP4#ADDRESS_1908_IP4#g' \
	-e 's#ADDRESS_IP6#ADDRESS_1908_IP6#g' \
	-e 's# EXCLUDE# EXCLUDE_1908#g' \
	-e 's# INCLUDE# INCLUDE_1908#g' \
	-e 's# ASM# ASM_1908#g' \
	-e 's# SSM# SSM_1908#g' \
	-e 's#_API_#_API_1908_#g' \
	-e 's#TAP_FLAG_#TAP_FLAG_1908_#g' \
	-e 's#FLOWPROBE_WHICH_FLAG_#FLOWPROBE_WHICH_FLAG_1908_#g' \
	-e 's#FLOWPROBE_RECORD_FLAG_#FLOWPROBE_RECORD_FLAG_1908_#g' \
	-e 's#memory_client_main_t#memory_client_1908_main_t#g' \
	-e 's#<vnet_1908/format_fns.h>#<vnet/format_fns.h>#g' \
	-e 's#<vnet_1908/vnet.h>#<vnet/vnet.h>#g' \
	-e 's#<vnet_1908/api_errno.h>#<vnet/api_errno.h>#g' \
	-e 's#<vnet_1908/ip/ip.h>#<vnet/ip/ip.h>#g' \
	-e 's#<vnet_1908/ip/format.h>#<vnet/ip/format.h>#g' \
	-e 's#<vnet_1908/ip/ip_neighbor.h>#<vnet/ip/ip_neighbor.h>#g' \
	-e 's#<vnet_1908/ip/ip_types_api.h>#<vnet/ip/ip_types_api.h>#g' \
	-e 's#<vnet_1908/fib/fib_api.h>#<vnet/fib/fib_api.h>#g' \
	-e 's#<vnet_1908/unix/tuntap.h>#<vnet/unix/tuntap.h>#g' \
	-e 's#<vnet_1908/mpls/mpls.h>#<vnet/mpls/mpls.h>#g' \
	-e 's#<vnet_1908/dhcp/dhcp_proxy.h>#<vnet/dhcp/dhcp_proxy.h>#g' \
	-e 's#<vnet_1908/l2tp/l2tp.h>#<vnet/l2tp/l2tp.h>#g' \
	-e 's#<vnet_1908/l2/l2_input.h>#<vnet/l2/l2_input.h>#g' \
	-e 's#<vnet_1908/srv6/sr.h>#<vnet/srv6/sr.h>#g' \
	-e 's#<vnet_1908/srmpls/sr_mpls.h>#<vnet/srmpls/sr_mpls.h>#g' \
	-e 's#<vnet_1908/gre/gre.h>#<vnet/gre/gre.h>#g' \
	-e 's#<vnet_1908/vxlan-gpe/vxlan_gpe.h>#<vnet/vxlan-gpe/vxlan_gpe.h>#g' \
	-e 's#<vnet_1908/geneve/geneve.h>#<vnet/geneve/geneve.h>#g' \
	-e 's#<vnet_1908/classify/policer_classify.h>#<vnet/classify/policer_classify.h>#g' \
	-e 's#<vnet_1908/policer/xlate.h>#<vnet/policer/xlate.h>#g' \
	-e 's#<vnet_1908/policer/policer.h>#<vnet/policer/policer.h>#g' \
	-e 's#<vnet_1908/classify/flow_classify.h>#<vnet/classify/flow_classify.h>#g' \
	-e 's#<vnet_1908/lisp-cp/lisp_types.h>#<vnet/lisp-cp/lisp_types.h>#g' \
	-e 's#<vnet_1908/qos/qos_types.h>#<vnet/qos/qos_types.h>#g' \
	-e 's#<vnet_1908/ethernet/ethernet.h>#<vnet/ethernet/ethernet.h>#g' \
	-e 's#<vnet_1908/ethernet/ethernet_types_api.h>#<vnet/ethernet/ethernet_types_api.h>#g' \
	-e 's#<vnet_1908/l2/l2_vtr.h>#<vnet/l2/l2_vtr.h>#g' \
	-e 's#<vnet_1908/bonding/node.h>#<vnet/bonding/node.h>#g' \
	-e 's#VNET_API_1908_ERROR_#VNET_API_ERROR_#g' \
	-e 's#VNET_API_ERROR_API_1908_ENDIAN_FAILED#VNET_API_ERROR_API_ENDIAN_FAILED#g' \
	-e 's#format_vl_1908_api_#format_vl_api_#g' \
	{} \;


sed -i \
	-e 's#L2_API_PORT_TYPE#L2_1908_API_PORT_TYPE#g' \
	-e 's#IP_API_#IP_1908_API_#g' \
	-e 's#IP_1908_SCAN_#IP_SCAN_#g' \
	-e 's#format_vl_1908_api_fib_path#format_vl_api_fib_path#g' \
	src_1908/vpp_1908/api/custom_dump.c

git grep -h vl_noop_handler ../.. | grep define | sed -e 's#vl_api_#vl_1908_api_#g' -e's#vl_noop_handler#vl_1908_noop_print#' | grep -v grep >src_1908/noop_print_handlers.h
# make manual handlers also noop for now
grep -r -h 'manual:' . | grep print | grep -v grep | awk '{ print "#define " $3 " vl_1908_noop_print"; }' >>src_1908/noop_print_handlers.h

echo '#define vl_1908_noop_print(x,h)' >>src_1908/noop_print_handlers.h

sed -i \
	-e 's#api-rx-from-ring#api-1908-rx-from-ring#g' \
	-e 's#api-rx-from-node#api-1908-rx-from-node#g' \
	src_1908/vlibmemory_1908/vlib_api.c

sed -i \
	-e 's#api-segment#api-1908-segment#g' \
	-e 's#api_segment_config#api_1908_segment_config#g' \
	-e 's#show arp-nd-event registrations#dontshow arp-nd-event registrations#g' \
	-e 's#vpe_api_hookup (vlib_main_t \* vm)#\
vpe_api_hookup_old(vlib_main_t * vm);   \
static clib_error_t * \
vpe_api_hookup (vlib_main_t * vm) { \
   if(vm == (void *)1) { \
	   return vpe_api_hookup_old(vm); \
   } \
   return 0; \
} static clib_error_t * vpe_api_hookup_old(vlib_main_t * vm) #g' \
	src_1908/vpp_1908/api/api.c

# vpe_api_hookup (vlib_main_t * vm)

find . -name '*.api.h' -printf '%f %P\n' | \
  grep -v 'api1908compat' | \
  grep -v 'memclnt' | \
  grep -v 'plugins' | \
  perl -npe 's|([^\.]*)\.[^ ]*|\1|;' | \
  perl -npe 's|^(\S+)\s(\S+)$|"

#include \"$2\"
#ifdef vl_1908_msg_name_crc_list
foreach_vl_1908_msg_name_crc_$1
#undef foreach_vl_1908_msg_name_crc_$1
#endif

";|ge;' >all-headers-1908.h

find ../../../build-root/build-vpp_debug-native/vpp/ -name '*.api.h' -printf '%f %P\n' | \
  grep -v 'api1908compat' | \
  grep -v 'memclnt' | \
  grep -v 'plugins' | \
  perl -npe 's|([^\.]*)\.[^ ]*|\1|;' | \
  perl -npe 's|^(\S+)\s(\S+)$|"

#include <$2>
#ifdef vl_msg_name_crc_list
foreach_vl_msg_name_crc_$1
#undef foreach_vl_msg_name_crc_$1
#endif

";|ge;' >all-headers-curr.h


bash genheader-plugins-1908 >plugin-headers-1908.h
bash genheader-plugins-curr >plugin-headers-curr.h

touch build-auto-source.h
